# This is a mock swap contract
#
{-# STDLIB_VERSION 6 #-}
{-# SCRIPT_TYPE ACCOUNT #-}
{-# CONTENT_TYPE DAPP #-}

##### Key constants #####

# Swaps at 1-to-1 rate
@Callable(i)
func swap(_token: String, _minAmount: Int) = {
  let _amount = i.payments[0].amount
  let fromAssetInfoDecimals = if (i.payments[0].assetId.isDefined()) then {
    assetInfo(i.payments[0].assetId.value()).value().decimals
  } else {
    8
  }
  let toAssetInfoDecimals = assetInfo(fromBase58String(_token)).value().decimals
  let decimalDiff = toAssetInfoDecimals - fromAssetInfoDecimals
  
  let resultAmount = 
         if (decimalDiff ==  2) then _amount * 100 
    else if (decimalDiff == -2) then _amount / 100
    else if (decimalDiff ==  0) then _amount
    else throw("Invalid decimal diff")

  [
    ScriptTransfer(i.caller, resultAmount, fromBase58String(_token))
  ]
}

@Verifier(tx)
func verify() = sigVerify(tx.bodyBytes, tx.proofs[0], tx.senderPublicKey)